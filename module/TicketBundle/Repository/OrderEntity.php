<?php
/**
 * Litus is a project by a group of students from the KU Leuven. The goal is to create
 * various applications to support the IT needs of student unions.
 *
 * @author Niels Avonds <niels.avonds@litus.cc>
 * @author Karsten Daemen <karsten.daemen@litus.cc>
 * @author Koen Certyn <koen.certyn@litus.cc>
 * @author Bram Gotink <bram.gotink@litus.cc>
 * @author Dario Incalza <dario.incalza@litus.cc>
 * @author Pieter Maene <pieter.maene@litus.cc>
 * @author Kristof MariÃ«n <kristof.marien@litus.cc>
 * @author Lars Vierbergen <lars.vierbergen@litus.cc>
 * @author Daan Wendelen <daan.wendelen@litus.cc>
 * @author Mathijs Cuppens <mathijs.cuppens@litus.cc>
 * @author Floris Kint <floris.kint@vtk.be>
 *
 * @license http://litus.cc/LICENSE
 */

namespace TicketBundle\Repository;

use TicketBundle\Entity\Event;
use CommonBundle\Entity\User\Person;


/**
 * OrderEntity
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderEntity extends \CommonBundle\Component\Doctrine\ORM\EntityRepository
{

   public function findAllByEventQuery(Event $event)
   {
       $query = $this->getEntityManager()->createQueryBuilder();
       $resultSet = $query->select('o')
           ->from('TicketBundle\Entity\OrderEntity', 'o')
           ->where(
              $query->expr()->eq('o.event', ':event')
           )
           ->setParameter('event', $event->getId())
           ->getQuery();

       return $resultSet;
   }

   public function findAllByEventAndPersonQuery(Event $event, Person $person)
   {
       $query = $this->getEntityManager()->createQueryBuilder();
       $resultSet = $query->select('o')
           ->from('TicketBundle\Entity\OrderEntity', 'o')
           ->where(
              $query->expr()->andX(
                   $query->expr()->eq('o.event', ':event'),
                   $query->expr()->orX(
                      $query->expr()->eq('t.person', ':person'),
                      $query->expr()->eq('o.booker', ':person')
                   )
               )
           )
           ->setParameter('event', $event->getId())
           ->setParameter('person', $person->getId())
           ->getQuery();

       return $resultSet;
   }

}
